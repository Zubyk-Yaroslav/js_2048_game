{"mappings":"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","sources":["<anon>","src/scripts/main.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_type_of.js"],"sourcesContent":["(function () {\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$e6256bf45c68d561(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$2fd15edff6687200(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$60dbc22abd7da546() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $efec029548ccee7f$export$fdf2a89c76341bbf(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$e6256bf45c68d561)(arr) || (0, $8ca2848f896a6803$export$2fd15edff6687200)(arr, i) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr, i) || (0, $a0bc1859061deae1$export$60dbc22abd7da546)();\n}\n\n\n\nfunction $0b5c99e6a0876eaa$export$5f0017c582d45a2d(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ], gameStatus = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"idle\", gameScore = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.initialState = initialState;\n        this.gameStatus = gameStatus;\n        this.gameScore = gameScore;\n        this.state = this.copyState(initialState);\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */ key: \"copyState\",\n            value: function copyState(state) {\n                return JSON.parse(JSON.stringify(state));\n            }\n        },\n        {\n            // Function for check if any rows or columns were changed\n            key: \"toComapare\",\n            value: function toComapare(comparingArr, toCompare) {\n                var _this = this;\n                if (comparingArr.length !== toCompare.length) return false;\n                return comparingArr.every(function(val, index) {\n                    if (Array.isArray(val) && Array.isArray(toCompare[index])) {\n                        if (_this.toComapare(val, toCompare[index])) return true;\n                    } else if (val === toCompare[index]) return true;\n                    return false;\n                });\n            }\n        },\n        {\n            // Function for check if 2048 is present\n            key: \"setWinGame\",\n            value: function setWinGame(cell) {\n                if (cell === 2048) {\n                    this.gameStatus = \"win\";\n                    this.getStatus();\n                }\n            }\n        },\n        {\n            key: \"isGameLoseVertical\",\n            value: function isGameLoseVertical() {\n                var _this = this, _loop = function(i) {\n                    var col = _this.state.map(function(row) {\n                        return row[i];\n                    });\n                    for(var j = 0; j < col.length - 1; j++){\n                        if (col[j] === 0 || col[j] === col[j + 1]) return {\n                            v: false\n                        };\n                    }\n                };\n                for(var i = 0; i < this.state.length; i++){\n                    var _ret = _loop(i);\n                    if ((0, $0b5c99e6a0876eaa$export$5f0017c582d45a2d)(_ret) === \"object\") return _ret.v;\n                }\n                return true;\n            }\n        },\n        {\n            key: \"isGameLoseHorizontal\",\n            value: function isGameLoseHorizontal() {\n                for(var i = 0; i < this.state.length; i++)for(var j = 0; j < this.state[i].length - 1; j++){\n                    var row = this.state[i];\n                    if (row[j] === 0 || row[j] === row[j + 1]) return false;\n                }\n                return true;\n            }\n        },\n        {\n            // Function for horizontal moves cell\n            key: \"horizontalMoves\",\n            value: function horizontalMoves(direction) {\n                var _this = this;\n                if (this.getStatus() === \"idle\") return;\n                var toCompare = this.copyState(this.state);\n                this.state.map(function(row, i) {\n                    var newRow = [];\n                    for(var j = 0; j < row.length; j++){\n                        var nextIndex = j + 1;\n                        if (row[j] === 0) {\n                            nextIndex++;\n                            continue;\n                        }\n                        if (row[j] !== 0) {\n                            if (nextIndex < row.length && row[j] === row[nextIndex]) {\n                                row[j] += row[nextIndex];\n                                _this.gameScore += row[j];\n                                row[nextIndex] = 0;\n                            }\n                            newRow.push(row[j]);\n                        }\n                    }\n                    while(newRow.length < row.length)direction === \"left\" ? newRow.push(0) : newRow.unshift(0);\n                    _this.state[i] = newRow;\n                });\n                if (!this.toComapare(toCompare, this.state)) this.addNumberAfterStep();\n                if (this.isGameLoseVertical() && this.isGameLoseHorizontal()) {\n                    this.gameStatus = \"lose\";\n                    this.getStatus();\n                }\n            }\n        },\n        {\n            // Function for vertical moves cell\n            key: \"verticalMoves\",\n            value: function verticalMoves(direction) {\n                var _this = this;\n                if (this.getStatus() === \"idle\") return;\n                var toCompare = this.copyState(this.state);\n                var col = [];\n                this.state.map(function(_, i) {\n                    col = _this.state.map(function(c) {\n                        return c[i];\n                    });\n                    var newColumn = [];\n                    for(var j = 0; j < col.length; j++){\n                        var nextIndex = j + 1;\n                        if (col[j] === 0) {\n                            nextIndex++;\n                            continue;\n                        }\n                        if (col[j] !== 0) {\n                            if (nextIndex < col.length && col[j] === col[nextIndex]) {\n                                col[j] += col[nextIndex];\n                                _this.gameScore += col[j];\n                                col[nextIndex] = 0;\n                            }\n                            newColumn.push(col[j]);\n                        }\n                    }\n                    while(newColumn.length < col.length)direction === \"up\" ? newColumn.push(0) : newColumn.unshift(0);\n                    for(var k = 0; k < _this.state.length; k++)_this.state[k][i] = newColumn[k];\n                });\n                if (!this.toComapare(toCompare, this.state)) this.addNumberAfterStep();\n                if (this.isGameLoseVertical() && this.isGameLoseHorizontal()) {\n                    this.gameStatus = \"lose\";\n                    this.getStatus();\n                }\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                this.horizontalMoves(\"left\");\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this.horizontalMoves(\"right\");\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this.verticalMoves(\"up\");\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.verticalMoves(\"down\");\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.gameScore;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ // Function search cell === 0 and fill the number if it's possible\n            key: \"getIndexes\",\n            value: function getIndexes() {\n                var _this = this;\n                var emptyFields = [];\n                this.state.forEach(function(row, i) {\n                    row.forEach(function(col, j) {\n                        _this.setWinGame(col);\n                        if (col === 0) emptyFields.push([\n                            i,\n                            j\n                        ]);\n                    });\n                });\n                var randomEnptyValues = Math.floor(Math.random() * emptyFields.length);\n                return emptyFields[randomEnptyValues];\n            }\n        },\n        {\n            key: \"getNumber\",\n            value: function getNumber() {\n                return Math.random() < 0.1 ? 4 : 2;\n            }\n        },\n        {\n            // Function cells with number\n            key: \"renderFields\",\n            value: function renderFields(maxNumbers) {\n                var _this = this, _loop = function() {\n                    var index = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(_this.getIndexes());\n                    var includesSubArray = indexes.some(function(arr) {\n                        return arr.every(function(value, i) {\n                            return value === index[i];\n                        });\n                    });\n                    if (includesSubArray && maxNumbers === 2) index = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(_this.getIndexes());\n                    if (!index.length < 0) return {\n                        v: void void 0\n                    };\n                    if (_this.state[index[0]][index[1]] !== 0) return \"break\";\n                    indexes.push(index);\n                };\n                var indexes = [];\n                while(indexes.length < maxNumbers){\n                    var _ret = _loop();\n                    if ((0, $0b5c99e6a0876eaa$export$5f0017c582d45a2d)(_ret) === \"object\") return _ret.v;\n                    if (_ret === \"break\") break;\n                }\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = indexes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var _step_value = (0, $efec029548ccee7f$export$fdf2a89c76341bbf)(_step.value, 2), row = _step_value[0], col = _step_value[1];\n                        this.state[row][col] = this.getNumber();\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"addNumberAfterStep\",\n            value: function addNumberAfterStep() {\n                this.renderFields(1);\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.gameStatus;\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                this.renderFields(2);\n                this.gameStatus = \"playing\";\n                this.getStatus();\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                this.gameStatus = \"idle\";\n                this.state = this.copyState(this.initialState);\n                this.gameScore = 0;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var gameUIFields = [\n        [],\n        [],\n        [],\n        []\n    ];\n    var gameScoreInfo = document.querySelector(\".game-score\");\n    var startGameButton = document.querySelector(\".button.start\");\n    var messageLose = document.querySelector(\".message-lose\");\n    var messageWin = document.querySelector(\".message-win\");\n    var messageStart = document.querySelector(\".message-start\");\n    var gameFieldRows = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(document.querySelectorAll(\".field-row\"));\n    var gameFieldCell = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(document.querySelectorAll(\".field-row .field-cell\"));\n    var renderUIFields = function() {\n        var cells = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(gameFieldCell);\n        gameFieldRows.forEach(function(_, i) {\n            gameUIFields[i] = gameFieldRows[i];\n            gameFieldRows.forEach(function(__, j) {\n                gameUIFields[i][j] = cells[j];\n            });\n            cells = cells.slice(4);\n        });\n    };\n    var renderGameDesc = function() {\n        $197cd56b15c33885$var$game.state.forEach(function(row, i) {\n            row.forEach(function(coll, j) {\n                gameUIFields[i][j].textContent = \"\";\n                if (gameUIFields[i][j].textContent === \"\") gameUIFields[i][j].className = \"field-cell\";\n                if (coll > 0) {\n                    gameUIFields[i][j].append(coll);\n                    gameUIFields[i][j].className = \"field-cell field-cell--\".concat(coll);\n                }\n            });\n        });\n    };\n    document.addEventListener(\"click\", function(el) {\n        switch(el.srcElement.className){\n            case \"button start\":\n                $197cd56b15c33885$var$game.start();\n                renderUIFields();\n                renderGameDesc();\n                startGameButton.classList.remove(\"start\");\n                startGameButton.classList.add(\"restart\");\n                startGameButton.textContent = \"Restart\";\n                messageStart.classList.add(\"hidden\");\n                gameScoreInfo.textContent = 0;\n                break;\n            case \"button restart\":\n                hideMessageGame(messageLose, \"lose\");\n                hideMessageGame(messageWin, \"win\");\n                gameScoreInfo.textContent = 0;\n                $197cd56b15c33885$var$game.restart();\n                $197cd56b15c33885$var$game.start();\n                renderUIFields();\n                renderGameDesc();\n                break;\n            default:\n                break;\n        }\n    });\n    document.addEventListener(\"keydown\", function(ev) {\n        if ($197cd56b15c33885$var$game.gameStatus === \"idle\") return;\n        if ($197cd56b15c33885$var$game.gameStatus === \"win\" || $197cd56b15c33885$var$game.gameStatus === \"lose\") return;\n        switch(ev.key){\n            case \"ArrowLeft\":\n                $197cd56b15c33885$var$game.moveLeft();\n                renderGameDesc();\n                gameScoreInfo.textContent = $197cd56b15c33885$var$game.getScore();\n                showMessageGame(messageWin, \"win\");\n                showMessageGame(messageLose, \"lose\");\n                break;\n            case \"ArrowRight\":\n                $197cd56b15c33885$var$game.moveRight();\n                renderGameDesc();\n                gameScoreInfo.textContent = $197cd56b15c33885$var$game.getScore();\n                showMessageGame(messageWin, \"win\");\n                showMessageGame(messageLose, \"lose\");\n                break;\n            case \"ArrowUp\":\n                $197cd56b15c33885$var$game.moveUp();\n                renderGameDesc();\n                gameScoreInfo.textContent = $197cd56b15c33885$var$game.getScore();\n                showMessageGame(messageWin, \"win\");\n                showMessageGame(messageLose, \"lose\");\n                break;\n            case \"ArrowDown\":\n                $197cd56b15c33885$var$game.moveDown();\n                renderGameDesc();\n                gameScoreInfo.textContent = $197cd56b15c33885$var$game.getScore();\n                showMessageGame(messageWin, \"win\");\n                showMessageGame(messageLose, \"lose\");\n                break;\n            default:\n                break;\n        }\n    });\n    var showMessageGame = function(messageSelector, gameStatus) {\n        if ($197cd56b15c33885$var$game.gameStatus === gameStatus) messageSelector.classList.remove(\"hidden\");\n    };\n    var hideMessageGame = function(messageSelector, gameStatus) {\n        if ($197cd56b15c33885$var$game.gameStatus === gameStatus) messageSelector.classList.add(\"hidden\");\n    };\n}); // Write your code here\n\n})();\n//# sourceMappingURL=index.49494536.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const gameUIFields = [[], [], [], []];\n  const gameScoreInfo = document.querySelector('.game-score');\n  const startGameButton = document.querySelector('.button.start');\n  const messageLose = document.querySelector('.message-lose');\n  const messageWin = document.querySelector('.message-win');\n  const messageStart = document.querySelector('.message-start');\n  const gameFieldRows = [...document.querySelectorAll('.field-row')];\n  const gameFieldCell\n    = [...document.querySelectorAll('.field-row .field-cell')];\n\n  const renderUIFields = () => {\n    let cells = [...gameFieldCell];\n\n    gameFieldRows.forEach((_, i) => {\n      gameUIFields[i] = gameFieldRows[i];\n\n      gameFieldRows.forEach((__, j) => {\n        gameUIFields[i][j] = cells[j];\n      });\n      cells = cells.slice(4);\n    });\n  };\n\n  const renderGameDesc = () => {\n    game.state.forEach((row, i) => {\n      row.forEach((coll, j) => {\n        gameUIFields[i][j].textContent = '';\n\n        if (gameUIFields[i][j].textContent === '') {\n          gameUIFields[i][j].className = `field-cell`;\n        }\n\n        if (coll > 0) {\n          gameUIFields[i][j].append(coll);\n          gameUIFields[i][j].className = `field-cell field-cell--${coll}`;\n        }\n      });\n    });\n  };\n\n  document.addEventListener('click', el => {\n    switch (el.srcElement.className) {\n      case 'button start':\n        game.start();\n        renderUIFields();\n        renderGameDesc();\n        startGameButton.classList.remove('start');\n        startGameButton.classList.add('restart');\n        startGameButton.textContent = 'Restart';\n        messageStart.classList.add('hidden');\n        gameScoreInfo.textContent = 0;\n        break;\n      case 'button restart':\n        hideMessageGame(messageLose, 'lose');\n        hideMessageGame(messageWin, 'win');\n        gameScoreInfo.textContent = 0;\n        game.restart();\n        game.start();\n        renderUIFields();\n        renderGameDesc();\n        break;\n      default:\n        break;\n    }\n  });\n\n  document.addEventListener('keydown', ev => {\n    if (game.gameStatus === 'idle') {\n      return;\n    }\n\n    if (game.gameStatus === 'win'\n      || game.gameStatus === 'lose') {\n      return;\n    }\n\n    switch (ev.key) {\n      case 'ArrowLeft':\n        game.moveLeft();\n        renderGameDesc();\n        gameScoreInfo.textContent = game.getScore();\n        showMessageGame(messageWin, 'win');\n        showMessageGame(messageLose, 'lose');\n        break;\n      case 'ArrowRight':\n        game.moveRight();\n        renderGameDesc();\n        gameScoreInfo.textContent = game.getScore();\n        showMessageGame(messageWin, 'win');\n        showMessageGame(messageLose, 'lose');\n        break;\n      case 'ArrowUp':\n        game.moveUp();\n        renderGameDesc();\n        gameScoreInfo.textContent = game.getScore();\n        showMessageGame(messageWin, 'win');\n        showMessageGame(messageLose, 'lose');\n        break;\n      case 'ArrowDown':\n        game.moveDown();\n        renderGameDesc();\n        gameScoreInfo.textContent = game.getScore();\n        showMessageGame(messageWin, 'win');\n        showMessageGame(messageLose, 'lose');\n        break;\n      default:\n        break;\n    }\n  });\n\n  const showMessageGame = (messageSelector, gameStatus) => {\n    if (game.gameStatus === gameStatus) {\n      messageSelector.classList.remove('hidden');\n    }\n  };\n\n  const hideMessageGame = (messageSelector, gameStatus) => {\n    if (game.gameStatus === gameStatus) {\n      messageSelector.classList.add('hidden');\n    }\n  };\n});\n\n// Write your code here\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n\n  copyState(state) {\n    return JSON.parse(JSON.stringify(state));\n  }\n\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n    gameStatus = 'idle',\n    gameScore = 0) {\n    this.initialState = initialState;\n    this.gameStatus = gameStatus;\n    this.gameScore = gameScore;\n    this.state = this.copyState(initialState);\n  }\n  // Function for check if any rows or columns were changed\n  toComapare(comparingArr, toCompare) {\n    if (comparingArr.length !== toCompare.length) {\n      return false;\n    }\n\n    return comparingArr.every((val, index) => {\n      if (Array.isArray(val) && Array.isArray(toCompare[index])) {\n        if (this.toComapare(val, toCompare[index])) {\n          return true;\n        };\n      } else if (val === toCompare[index]) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  // Function for check if 2048 is present\n  setWinGame(cell) {\n    if (cell === 2048) {\n      this.gameStatus = 'win';\n      this.getStatus();\n    }\n  }\n\n  isGameLoseVertical() {\n    for (let i = 0; i < this.state.length; i++) {\n      const col = this.state.map(row => row[i]);\n\n      for (let j = 0; j < col.length - 1; j++) {\n        if (col[j] === 0 || col[j] === col[j + 1]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  isGameLoseHorizontal() {\n    for (let i = 0; i < this.state.length; i++) {\n      for (let j = 0; j < this.state[i].length - 1; j++) {\n        const row = this.state[i];\n\n        if (row[j] === 0 || row[j] === row[j + 1]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  // Function for horizontal moves cell\n  horizontalMoves(direction) {\n    if (this.getStatus() === 'idle') {\n      return;\n    }\n\n    const toCompare = this.copyState(this.state);\n\n    this.state.map((row, i) => {\n      const newRow = [];\n\n      for (let j = 0; j < row.length; j++) {\n        let nextIndex = j + 1;\n\n        if (row[j] === 0) {\n          nextIndex++;\n          continue;\n        }\n\n        if (row[j] !== 0) {\n          if (nextIndex < row.length && row[j] === row[nextIndex]) {\n            row[j] += row[nextIndex];\n            this.gameScore += row[j];\n            row[nextIndex] = 0;\n          }\n          newRow.push(row[j]);\n        }\n      }\n\n      while (newRow.length < row.length) {\n        direction === 'left' ? newRow.push(0) : newRow.unshift(0);\n      }\n      this.state[i] = newRow;\n    });\n\n    if (!this.toComapare(toCompare, this.state)) {\n      this.addNumberAfterStep();\n    }\n\n    if (this.isGameLoseVertical() && this.isGameLoseHorizontal()) {\n      this.gameStatus = 'lose';\n      this.getStatus();\n    }\n  }\n\n  // Function for vertical moves cell\n  verticalMoves(direction) {\n    if (this.getStatus() === 'idle') {\n      return;\n    }\n\n    const toCompare = this.copyState(this.state);\n    let col = [];\n\n    this.state.map((_, i) => {\n      col = this.state.map(c => c[i]);\n\n      const newColumn = [];\n\n      for (let j = 0; j < col.length; j++) {\n        let nextIndex = j + 1;\n\n        if (col[j] === 0) {\n          nextIndex++;\n          continue;\n        }\n\n        if (col[j] !== 0) {\n          if (nextIndex < col.length && col[j] === col[nextIndex]) {\n            col[j] += col[nextIndex];\n            this.gameScore += col[j];\n            col[nextIndex] = 0;\n          }\n          newColumn.push(col[j]);\n        }\n      }\n\n      while (newColumn.length < col.length) {\n        direction === 'up' ? newColumn.push(0) : newColumn.unshift(0);\n      }\n\n      for (let k = 0; k < this.state.length; k++) {\n        this.state[k][i] = newColumn[k];\n      }\n    });\n\n    if (!this.toComapare(toCompare, this.state)) {\n      this.addNumberAfterStep();\n    }\n\n    if (this.isGameLoseVertical() && this.isGameLoseHorizontal()) {\n      this.gameStatus = 'lose';\n      this.getStatus();\n    }\n  }\n\n  moveLeft() {\n    this.horizontalMoves('left');\n  }\n\n  moveRight() {\n    this.horizontalMoves('right');\n  }\n\n  moveUp() {\n    this.verticalMoves('up');\n  }\n\n  moveDown() {\n    this.verticalMoves('down');\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.gameScore;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n\n  // Function search cell === 0 and fill the number if it's possible\n  getIndexes() {\n    const emptyFields = [];\n\n    this.state.forEach((row, i) => {\n      row.forEach((col, j) => {\n        this.setWinGame(col);\n\n        if (col === 0) {\n          emptyFields.push([i, j]);\n        }\n      });\n    });\n\n    const randomEnptyValues = Math.floor(Math.random() * emptyFields.length);\n\n    return emptyFields[randomEnptyValues];\n  }\n\n  getNumber() {\n    return Math.random() < 0.1 ? 4 : 2;\n  }\n\n  // Function cells with number\n  renderFields(maxNumbers) {\n    const indexes = [];\n\n    while (indexes.length < maxNumbers) {\n      let index = [...this.getIndexes()];\n\n      const includesSubArray = indexes.some(arr =>\n        arr.every((value, i) => value === index[i]));\n\n      if (includesSubArray && maxNumbers === 2) {\n        index = [...this.getIndexes()];\n      }\n\n      if (!index.length < 0) {\n        return;\n      }\n\n      if (this.state[index[0]][index[1]] !== 0) {\n        break;\n      }\n\n      indexes.push(index);\n    }\n\n    for (const [row, col] of indexes) {\n      this.state[row][col] = this.getNumber();\n    }\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  addNumberAfterStep() {\n    this.renderFields(1);\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    return this.gameStatus;\n  }\n\n  /**\n   * Starts the game.\n   */\n\n  start() {\n    this.renderFields(2);\n    this.gameStatus = 'playing';\n    this.getStatus();\n  }\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.gameStatus = 'idle';\n    this.state = this.copyState(this.initialState);\n    this.gameScore = 0;\n  }\n\n  // Add your own methods here\n}\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _array_with_holes } from \"./_array_with_holes.js\";\nimport { _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","export function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","export function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","export function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","export function _type_of(obj) {\n    \"@swc/helpers - typeof\";\n\n    return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\nexport { _type_of as _ };\n"],"names":["$c3b10a83b523f372$export$79e617b1955a2616","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$a5be06335b3a083c","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$227c6742e0ff6f82$export$1b5e630bc3aea29f","isArray","iter","Symbol","iterator","TypeError","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","$0b5c99e6a0876eaa$export$5f0017c582d45a2d","obj","$197cd56b15c33885$var$game","protoProps","staticProps","Game","initialState","arguments","gameStatus","gameScore","instance","Constructor","state","copyState","value","JSON","parse","stringify","comparingArr","toCompare","_this","every","val","index","toComapare","cell","getStatus","_loop","col","map","row","j","v","_ret","direction","newRow","nextIndex","push","unshift","addNumberAfterStep","isGameLoseVertical","isGameLoseHorizontal","_","c","newColumn","k","horizontalMoves","verticalMoves","emptyFields","forEach","setWinGame","randomEnptyValues","Math","floor","random","maxNumbers","indexes","getIndexes","some","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","_step_value","_s","_e","_i","_arr","_n","_d","err","getNumber","return","renderFields","document","addEventListener","gameUIFields","gameScoreInfo","querySelector","startGameButton","messageLose","messageWin","messageStart","gameFieldRows","querySelectorAll","gameFieldCell","renderUIFields","cells","__","renderGameDesc","coll","textContent","className","append","concat","el","srcElement","start","classList","remove","add","hideMessageGame","restart","ev","moveLeft","getScore","showMessageGame","moveRight","moveUp","moveDown","messageSelector"],"version":3,"file":"index.49494536.js.map"}